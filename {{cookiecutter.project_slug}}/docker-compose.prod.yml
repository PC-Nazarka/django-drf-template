version: '3'

volumes:
  postgres_data:

services:
  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - django
      - swagger-ui
{%- if cookiecutter.websockets != 'n' %}
      - daphne
{%- endif %}
    ports:
      - 80:80
{% if cookiecutter.websockets != 'n' %}
  daphne:
    container_name: daphne
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
    depends_on:
      - postgres
      - redis
    expose:
      - 8080
    volumes:
      - ./logs/:/server/logs/
    env_file:
      - ./.envs/django.env
      - ./.envs/celery.env
    command: daphne -b 0.0.0.0 -p 8080 config.asgi:application --access-log ./logs/daphne.log -v 3
{% endif %}
  django:
    container_name: django
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
    depends_on:
      - postgres
      - redis
    expose:
      - 8000
    volumes:
      - ./logs/:/server/logs/
    env_file:
      - ./.envs/django.env
      - ./.envs/celery.env
    command: gunicorn config.wsgi -c ./config/gunicorn.py

  postgres:
    image: postgres:14.4
    container_name: postgres
    restart: always
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./dumps:/dumps
    env_file:
      - ./.envs/postgres.env

  redis:
    image: redis:6
    container_name: redis
    restart: always
    expose:
      - 6379
{% if cookiecutter.celery != 'n' %}  
  celery_worker:
    container_name: celery_worker
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs/:/server/logs/
    env_file:
      - ./.envs/django.env
      - ./.envs/celery.env
    command: celery --app=config worker --loglevel=INFO -f ./logs/celery_worker.log

  celery_beat:
    container_name: celery_beat
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs/:/server/logs/
    env_file:
      - ./.envs/django.env
      - ./.envs/celery.env
    command: celery --app=config beat --scheduler=django --loglevel=INFO -f ./logs/celery_beat.log
{% endif %}
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    expose:
      - 5050
    volumes:
      - ./docs/openapi.yaml:/openapi.yaml
    environment:
      - SWAGGER_JSON=/openapi.yaml
      - PORT=5050
