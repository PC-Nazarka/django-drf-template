version: '3'

volumes:
  postgres_data:

services:
  django:
    container_name: django
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--with dev"
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./server:/server
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
    command: python manage.py runserver 0.0.0.0:8000

  postgres:
    image: postgres:14.4
    container_name: postgres
    restart: always
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: redis:6
    container_name: redis
    restart: always
    expose:
      - 6379
{% if cookiecutter.celery != 'n' %}  
  celery_worker:
    container_name: celery_worker
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--with dev"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
    command: celery --app=config worker --loglevel=DEBUG

  celery_beat:
    container_name: celery_beat
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--with dev"
    depends_on:
      - postgres
      - redis
      - celery_worker
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
    command: celery --app=config beat --scheduler=django --loglevel=DEBUG

  flower:
    container_name: flower
    restart: always
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--with dev"
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
    depends_on:
      - postgres
      - redis
      - celery_worker
      - celery_beat
    command: celery --app=config flower
{% endif %}
{%- if cookiecutter.websockets != 'n' %}
  alexandria:
    image: raisultan/alexandria:0.1
    container_name: alexandria
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./docs/ws.yml:/ws.yml
    environment:
      - ALEXANDRIA_YAML=/ws.yml
{% endif %}
  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: swagger-editor
    restart: always
    ports:
      - "5050:8080"
